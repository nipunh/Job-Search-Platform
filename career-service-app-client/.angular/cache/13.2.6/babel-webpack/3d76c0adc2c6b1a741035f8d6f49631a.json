{"ast":null,"code":"import _asyncToGenerator from \"/Users/nipunhedaoo/Documents/GitHub/Team_CodeBlooded_SOEN6011_Summer2023/career-service-app-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed, fakeAsync, tick } from '@angular/core/testing';\nimport { EmployerJobDetailComponent } from './employer-job-details.component';\nimport { EmployerJobDetailService } from './employer-job-details.service';\nimport { CreateProfileService } from '../create-profile/create-profile.service';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\ndescribe('EmployerJobDetailComponent', () => {\n  let component;\n  let fixture;\n  let service;\n  let routerSpy = {\n    navigate: jasmine.createSpy('navigate')\n  };\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [EmployerJobDetailComponent],\n      imports: [],\n      providers: [{\n        provide: Router,\n        useValue: routerSpy\n      }]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(EmployerJobDetailComponent);\n    component = fixture.componentInstance;\n    service = fixture.debugElement.injector.get(EmployerJobDetailService);\n    fixture.detectChanges();\n  });\n  it('should download the resume when calling downloadResume', fakeAsync(() => {\n    const userId = \"64b739ff584291261ac7abdb\";\n    const resumeBlob = new Blob(['PDF content'], {\n      type: 'application/pdf'\n    });\n    const createProfileService = TestBed.inject(CreateProfileService);\n    const createObjectURLSpy = spyOn(window.URL, 'createObjectURL').and.returnValue('mock-url');\n    const linkClickSpy = spyOn(document.createElement('a'), 'click');\n    createProfileService.downloadResume.and.returnValue(of(resumeBlob));\n    component.downloadResume(userId);\n    tick();\n    expect(createObjectURLSpy).toHaveBeenCalledWith(resumeBlob);\n    expect(linkClickSpy).toHaveBeenCalled(); // expect(toastrService.error).not.toHaveBeenCalled();\n  }));\n});","map":{"version":3,"sources":["/Users/nipunhedaoo/Documents/GitHub/Team_CodeBlooded_SOEN6011_Summer2023/career-service-app-client/src/app/employer-job-details/employer-job-details.component.spec.ts"],"names":["TestBed","fakeAsync","tick","EmployerJobDetailComponent","EmployerJobDetailService","CreateProfileService","of","Router","describe","component","fixture","service","routerSpy","navigate","jasmine","createSpy","beforeEach","configureTestingModule","declarations","imports","providers","provide","useValue","compileComponents","createComponent","componentInstance","debugElement","injector","get","detectChanges","it","userId","resumeBlob","Blob","type","createProfileService","inject","createObjectURLSpy","spyOn","window","URL","and","returnValue","linkClickSpy","document","createElement","downloadResume","expect","toHaveBeenCalledWith","toHaveBeenCalled"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,SAAlB,EAA6BC,IAA7B,QAAyC,uBAAzC;AACA,SAASC,0BAAT,QAA2C,kCAA3C;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACAC,QAAQ,CAAC,4BAAD,EAA+B,MAAM;AACzC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,SAAS,GAAG;AAAEC,IAAAA,QAAQ,EAAEC,OAAO,CAACC,SAAR,CAAkB,UAAlB;AAAZ,GAAhB;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMhB,OAAO,CAACiB,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACf,0BAAD,CADmB;AAEjCgB,MAAAA,OAAO,EAAE,EAFwB;AAGjCC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,OAAO,EAAEd,MAAX;AAAmBe,QAAAA,QAAQ,EAAEV;AAA7B,OAAD;AAHsB,KAA/B,EAKDW,iBALC,EAAN;AAMH,GAPS,EAAV;AAQAP,EAAAA,UAAU,CAAC,MAAM;AACbN,IAAAA,OAAO,GAAGV,OAAO,CAACwB,eAAR,CAAwBrB,0BAAxB,CAAV;AACAM,IAAAA,SAAS,GAAGC,OAAO,CAACe,iBAApB;AACAd,IAAAA,OAAO,GAAGD,OAAO,CAACgB,YAAR,CAAqBC,QAArB,CAA8BC,GAA9B,CAAkCxB,wBAAlC,CAAV;AACAM,IAAAA,OAAO,CAACmB,aAAR;AACH,GALS,CAAV;AAMAC,EAAAA,EAAE,CAAC,wDAAD,EAA2D7B,SAAS,CAAC,MAAM;AACzE,UAAM8B,MAAM,GAAG,0BAAf;AACA,UAAMC,UAAU,GAAG,IAAIC,IAAJ,CAAS,CAAC,aAAD,CAAT,EAA0B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA1B,CAAnB;AACA,UAAMC,oBAAoB,GAAGnC,OAAO,CAACoC,MAAR,CAAe/B,oBAAf,CAA7B;AACA,UAAMgC,kBAAkB,GAAGC,KAAK,CAACC,MAAM,CAACC,GAAR,EAAa,iBAAb,CAAL,CAAqCC,GAArC,CAAyCC,WAAzC,CAAqD,UAArD,CAA3B;AACA,UAAMC,YAAY,GAAGL,KAAK,CAACM,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAD,EAA8B,OAA9B,CAA1B;AACAV,IAAAA,oBAAoB,CAACW,cAArB,CAAoCL,GAApC,CAAwCC,WAAxC,CAAoDpC,EAAE,CAAC0B,UAAD,CAAtD;AACAvB,IAAAA,SAAS,CAACqC,cAAV,CAAyBf,MAAzB;AACA7B,IAAAA,IAAI;AACJ6C,IAAAA,MAAM,CAACV,kBAAD,CAAN,CAA2BW,oBAA3B,CAAgDhB,UAAhD;AACAe,IAAAA,MAAM,CAACJ,YAAD,CAAN,CAAqBM,gBAArB,GAVyE,CAWzE;AACH,GAZqE,CAApE,CAAF;AAaH,CAhCO,CAAR","sourcesContent":["import { TestBed, fakeAsync, tick } from '@angular/core/testing';\nimport { EmployerJobDetailComponent } from './employer-job-details.component';\nimport { EmployerJobDetailService } from './employer-job-details.service';\nimport { CreateProfileService } from '../create-profile/create-profile.service';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\ndescribe('EmployerJobDetailComponent', () => {\n    let component;\n    let fixture;\n    let service;\n    let routerSpy = { navigate: jasmine.createSpy('navigate') };\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [EmployerJobDetailComponent],\n            imports: [],\n            providers: [{ provide: Router, useValue: routerSpy }],\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(EmployerJobDetailComponent);\n        component = fixture.componentInstance;\n        service = fixture.debugElement.injector.get(EmployerJobDetailService);\n        fixture.detectChanges();\n    });\n    it('should download the resume when calling downloadResume', fakeAsync(() => {\n        const userId = \"64b739ff584291261ac7abdb\";\n        const resumeBlob = new Blob(['PDF content'], { type: 'application/pdf' });\n        const createProfileService = TestBed.inject(CreateProfileService);\n        const createObjectURLSpy = spyOn(window.URL, 'createObjectURL').and.returnValue('mock-url');\n        const linkClickSpy = spyOn(document.createElement('a'), 'click');\n        createProfileService.downloadResume.and.returnValue(of(resumeBlob));\n        component.downloadResume(userId);\n        tick();\n        expect(createObjectURLSpy).toHaveBeenCalledWith(resumeBlob);\n        expect(linkClickSpy).toHaveBeenCalled();\n        // expect(toastrService.error).not.toHaveBeenCalled();\n    }));\n});\n"]},"metadata":{},"sourceType":"module"}